Ext.data.JsonP.Function({"tagname":"class","name":"Function","autodetected":{},"files":[{"filename":"Function.js","href":"Function.html#Function"}],"abstract":true,"members":[{"name":"constructor","tagname":"method","owner":"Function","id":"method-constructor","meta":{}},{"name":"apply","tagname":"method","owner":"Function","id":"static-method-apply","meta":{"static":true}},{"name":"call","tagname":"method","owner":"Function","id":"static-method-call","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-Function","classIcon":"icon-class","superclasses":[],"subclasses":["browser.loom.unweave","browser.loom.weave","browser.loom.woven","composer.decorator","core.event.emitter.runner","utils.defer","utils.getargs","utils.merge","utils.select","utils.unique"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Subclasses</h4><div class='dependency'><a href='#!/api/browser.loom.unweave' rel='browser.loom.unweave' class='docClass'>browser.loom.unweave</a></div><div class='dependency'><a href='#!/api/browser.loom.weave' rel='browser.loom.weave' class='docClass'>browser.loom.weave</a></div><div class='dependency'><a href='#!/api/browser.loom.woven' rel='browser.loom.woven' class='docClass'>browser.loom.woven</a></div><div class='dependency'><a href='#!/api/composer.decorator' rel='composer.decorator' class='docClass'>composer.decorator</a></div><div class='dependency'><a href='#!/api/core.event.emitter.runner' rel='core.event.emitter.runner' class='docClass'>core.event.emitter.runner</a></div><div class='dependency'><a href='#!/api/utils.defer' rel='utils.defer' class='docClass'>utils.defer</a></div><div class='dependency'><a href='#!/api/utils.getargs' rel='utils.getargs' class='docClass'>utils.getargs</a></div><div class='dependency'><a href='#!/api/utils.merge' rel='utils.merge' class='docClass'>utils.merge</a></div><div class='dependency'><a href='#!/api/utils.select' rel='utils.select' class='docClass'>utils.select</a></div><div class='dependency'><a href='#!/api/utils.unique' rel='utils.unique' class='docClass'>utils.unique</a></div><h4>Files</h4><div class='dependency'><a href='source/Function.html#Function' target='_blank'>Function.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Function'>Function</span><br/><a href='source/Function.html#Function-method-constructor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Function-method-constructor' class='name expandable'>Function</a>( <span class='pre'>[arg], [functionBody]</span> ) : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><span class=\"signature\"></span></div><div class='description'><div class='short'>The Function constructor creates a new Function object. ...</div><div class='long'><p>The Function constructor creates a new Function object. In JavaScript every function is actually a Function object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>arg</span> : ...* (optional)<div class='sub-desc'><p>Names to be used by the function as formal argument names. Each must be a string that corresponds to a valid JavaScript identifier or a list of such strings separated with a comma; for example \"x\", \"theValue\", or \"a,b\".</p>\n</div></li><li><span class='pre'>functionBody</span> : String (optional)<div class='sub-desc'><p>A string containing the JavaScript statements comprising the function definition.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-apply' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Function'>Function</span><br/><a href='source/Function.html#Function-static-method-apply' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Function-static-method-apply' class='name expandable'>apply</a>( <span class='pre'>thisArg, [argsArray]</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Applies the method of another object in the context of a different object (the calling object); arguments can be pass...</div><div class='long'><p>Applies the method of another object in the context of a different object (the calling object); arguments can be passed as an Array object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>thisArg</span> : Object<div class='sub-desc'><p>The value of this provided for the call to fun. Note that this may not be the actual value seen by the method: if the method is a function in non-strict mode code, <code>null</code> and <code>undefined</code> will be replaced with the global object, and primitive values will be boxed.</p>\n</div></li><li><span class='pre'>argsArray</span> : Array (optional)<div class='sub-desc'><p>An array-like object, specifying the arguments with which fun should be called, or <code>null</code> or <code>undefined</code> if no arguments should be provided to the function. Starting with ECMAScript 5 these arguments can be a generic array-like object instead of an array.</p>\n</div></li></ul></div></div></div><div id='static-method-call' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Function'>Function</span><br/><a href='source/Function.html#Function-static-method-call' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Function-static-method-call' class='name expandable'>call</a>( <span class='pre'>thisArg, [arg]</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Calls (executes) a method of another object in the context of a different object (the calling object); arguments can ...</div><div class='long'><p>Calls (executes) a method of another object in the context of a different object (the calling object); arguments can be passed as they are.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>thisArg</span> : Object<div class='sub-desc'><p>The value of this provided for the call to fun. Note that this may not be the actual value seen by the method: if the method is a function in non-strict mode code, <code>null</code> and <code>undefined</code> will be replaced with the global object, and primitive values will be boxed.</p>\n</div></li><li><span class='pre'>arg</span> : ...* (optional)<div class='sub-desc'><p>Arguments for the object.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"abstract":true}});