Ext.data.JsonP.browser_mvc_controller({"uses":[],"mixedInto":[],"alternateClassNames":[],"parentMixins":[],"aliases":{},"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/widget5.html#browser-mvc-controller' target='_blank'>widget.js</a></div></pre><div class='doc-contents'><p>An abstracted routing widget for single-page application page-flow control. It basically processes the page URI\nthrough a list of following methods in sequence, most of which are to be implemented by subclassing this widget.</p>\n\n<ol>\n<li><a href=\"#!/api/browser.mvc.controller-method-uri2data\" rel=\"browser.mvc.controller-method-uri2data\" class=\"docClass\">uri2data</a> Implement this method to parse the requested URL into a route hash object which is basically a\nhash composed of URI segments.</li>\n<li><a href=\"#!/api/browser.mvc.controller-method-request\" rel=\"browser.mvc.controller-method-request\" class=\"docClass\">request</a> Implement this method to fulfill the requested route hash value with actual application\nstates, potentially loaded from server side.</li>\n<li><a href=\"#!/api/browser.mvc.controller-method-data2uri\" rel=\"browser.mvc.controller-method-data2uri\" class=\"docClass\">data2uri</a> Implement this method to serialize the application states to a new URL afterwards.</li>\n<li><a href=\"#!/api/browser.mvc.controller-event-updates\" rel=\"browser.mvc.controller-event-updates\" class=\"docClass\">on/updates</a> (Optional) Event to notify about the only application states that has changed.</li>\n<li><a href=\"#!/api/browser.mvc.controller-event-results\" rel=\"browser.mvc.controller-event-results\" class=\"docClass\">on/results</a> (Optional) Event to notify about the all application states.</li>\n</ol>\n\n\n<p>Application subscribes to <a href=\"#!/api/browser.mvc.controller-event-updates\" rel=\"browser.mvc.controller-event-updates\" class=\"docClass\">updates</a> and <a href=\"#!/api/browser.mvc.controller-event-results\" rel=\"browser.mvc.controller-event-results\" class=\"docClass\">results</a> for consuming the processed data.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-data2uri' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='browser.mvc.controller'>browser.mvc.controller</span><br/><a href='source/widget5.html#browser-mvc-controller-method-data2uri' target='_blank' class='view-source'>view source</a></div><a href='#!/api/browser.mvc.controller-method-data2uri' class='name expandable'>data2uri</a>( <span class='pre'>data</span> ) : String|<a href=\"#!/api/core.net.uri\" rel=\"core.net.uri\" class=\"docClass\">core.net.uri</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Implement this method to convert a hash back to core.net.uri that reflects the new page URL to change to. ...</div><div class='long'><p>Implement this method to convert a hash back to <a href=\"#!/api/core.net.uri\" rel=\"core.net.uri\" class=\"docClass\">core.net.uri</a> that reflects the new page URL to change to.</p>\n\n<p>Suppose that we'd like to structure the following application data on page URL:</p>\n\n<pre><code>{\n    \"page\": {\n        title: \"page1\"\n        ...\n    }\n\n    \"section\": {\n        \"name\": \"section3\"\n        ...\n    }\n\n    \"item\": {\n        \"id\": 4\n        ...\n    }\n}\n</code></pre>\n\n<p>The implementation of this method would look like:</p>\n\n<pre><code>var URI = require('troopjs-core/net/uri');\n\"data2uri\": function (data){\n    var uri = URI();\n    var paths = [data.page.title, data.section.name];\n    if(data.item)\n        paths.push(data.item.id);\n    uri.path = URI.Path(paths);\n    return uri;\n}\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object<div class='sub-desc'><p>Arbitrary data object that reflects the current states of the page.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String|<a href=\"#!/api/core.net.uri\" rel=\"core.net.uri\" class=\"docClass\">core.net.uri</a></span><div class='sub-desc'><p>The new URI to update the current location with.</p>\n</div></li></ul></div></div></div><div id='method-hash' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='browser.mvc.controller'>browser.mvc.controller</span><br/><a href='source/widget5.html#browser-mvc-controller-method-hash' target='_blank' class='view-source'>view source</a></div><a href='#!/api/browser.mvc.controller-method-hash' class='name expandable'>hash</a>( <span class='pre'>data</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Implement this method to return a \"timestamp\" alike value that determinate whether a data object has ever changed. ...</div><div class='long'><p>Implement this method to return a \"timestamp\" alike value that determinate whether a data object has ever changed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>data</span> : Object<div class='sub-desc'><p>Arbitrary data object.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The index string that indicates the freshness of the data.</p>\n</div></li></ul></div></div></div><div id='method-request' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='browser.mvc.controller'>browser.mvc.controller</span><br/><a href='source/widget5.html#browser-mvc-controller-method-request' target='_blank' class='view-source'>view source</a></div><a href='#!/api/browser.mvc.controller-method-request' class='name expandable'>request</a>( <span class='pre'>spec</span> ) : Promise<span class=\"signature\"></span></div><div class='description'><div class='short'>Implement this method to load application data requested by the page, e.g. ...</div><div class='long'><p>Implement this method to load application data requested by the page, e.g. query the server for each of the request key.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>spec</span> : Object<div class='sub-desc'><p>The value returned from <a href=\"#!/api/browser.mvc.controller-method-uri2data\" rel=\"browser.mvc.controller-method-uri2data\" class=\"docClass\">uri2data</a> as the page routing request.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Promise</span><div class='sub-desc'><p>data The promise that resolved to the page data fulfilled by the application logic.</p>\n</div></li></ul></div></div></div><div id='method-uri2data' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='browser.mvc.controller'>browser.mvc.controller</span><br/><a href='source/widget5.html#browser-mvc-controller-method-uri2data' target='_blank' class='view-source'>view source</a></div><a href='#!/api/browser.mvc.controller-method-uri2data' class='name expandable'>uri2data</a>( <span class='pre'>uri</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Implement this method to convert a core.net.uri that reflects the current page URL into a hash with key\nvalues presen...</div><div class='long'><p>Implement this method to convert a <a href=\"#!/api/core.net.uri\" rel=\"core.net.uri\" class=\"docClass\">core.net.uri</a> that reflects the current page URL into a hash with key\nvalues presenting each segment of the URL.</p>\n\n<p>Suppose we load the page with this URL: <code>http://example.org/foo/#page1/section2/3</code>, the implementation would look\nlike:</p>\n\n<pre><code>\"uri2data\": function (uri){\n    var data = {};\n    var path = uri.path;\n    // Let the first path segment (page1) presents the \"page\".\n    data[\"page\"] = path[0];\n    // Let the second path segment (section2) presents the \"section\"\n    data[\"section\"] = path[1];\n    // Let the third path segment (3) be the item no. default to be zero.\n    data[\"item\"] = path[2] || 0;\n}\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>uri</span> : <a href=\"#!/api/core.net.uri\" rel=\"core.net.uri\" class=\"docClass\">core.net.uri</a><div class='sub-desc'><p>URI that reflects the requested URI.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>the hash that represents the current URL.</p>\n</div></li></ul></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-results' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='browser.mvc.controller'>browser.mvc.controller</span><br/><a href='source/widget5.html#browser-mvc-controller-event-results' target='_blank' class='view-source'>view source</a></div><a href='#!/api/browser.mvc.controller-event-results' class='name expandable'>results</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The hub topic on which all application route data are published after each routing. ...</div><div class='long'><p>The hub topic on which all application route data are published after each routing.</p>\n</div></div></div><div id='event-updates' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='browser.mvc.controller'>browser.mvc.controller</span><br/><a href='source/widget5.html#browser-mvc-controller-event-updates' target='_blank' class='view-source'>view source</a></div><a href='#!/api/browser.mvc.controller-event-updates' class='name expandable'>updates</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>The hub topic on which data changes are published after each routing, those that reflects the route changes\nhappens t...</div><div class='long'><p>The hub topic on which data changes are published after each routing, those that reflects the route changes\nhappens to the URI.</p>\n</div></div></div></div></div></div></div>","autodetected":{},"members":[{"owner":"browser.mvc.controller","tagname":"method","meta":{},"name":"data2uri","id":"method-data2uri"},{"owner":"browser.mvc.controller","tagname":"method","meta":{},"name":"hash","id":"method-hash"},{"owner":"browser.mvc.controller","tagname":"method","meta":{},"name":"request","id":"method-request"},{"owner":"browser.mvc.controller","tagname":"method","meta":{},"name":"uri2data","id":"method-uri2data"},{"owner":"browser.mvc.controller","tagname":"event","meta":{},"name":"results","id":"event-results"},{"owner":"browser.mvc.controller","tagname":"event","meta":{},"name":"updates","id":"event-updates"}],"tagname":"class","short_doc":"An abstracted routing widget for single-page application page-flow control. ...","superclasses":[],"meta":{},"subclasses":[],"files":[{"href":"widget5.html#browser-mvc-controller","filename":"widget.js"}],"name":"browser.mvc.controller","requires":[],"mixins":[],"component":false,"id":"class-browser.mvc.controller"});