Ext.data.JsonP.composer_decorator_before({"tagname":"class","name":"composer.decorator.before","autodetected":{},"files":[{"filename":"before.js","href":"before.html#composer-decorator-before"}],"singleton":true,"members":[{"name":"constructor","tagname":"method","owner":"composer.decorator.before","id":"method-constructor","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-composer.decorator.before","classIcon":"icon-singleton","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/before.html#composer-decorator-before' target='_blank'>before.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='composer.decorator.before'>composer.decorator.before</span><br/><a href='source/before.html#composer-decorator-before-method-constructor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/composer.decorator.before-method-constructor' class='name expandable'>composer.decorator.before</a>( <span class='pre'>func</span> ) : <a href=\"#!/api/composer.mixin.decorator\" rel=\"composer.mixin.decorator\" class=\"docClass\">composer.mixin.decorator</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Create a decorator method that is to add code that will be executed before the original method. ...</div><div class='long'><p>Create a decorator method that is to add code that will be executed before the original method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>func</span> : Function<div class='sub-desc'><p>The decorator function which receives the same arguments as with the original, it's return\nvalue (if not undefined) will be send as the arguments of original function.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/composer.mixin.decorator\" rel=\"composer.mixin.decorator\" class=\"docClass\">composer.mixin.decorator</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"singleton":true}});