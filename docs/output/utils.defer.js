Ext.data.JsonP.utils_defer({"tagname":"class","name":"utils.defer","autodetected":{},"files":[{"filename":"defer.js","href":"defer.html#utils-defer"}],"singleton":true,"members":[{"name":"constructor","tagname":"method","owner":"utils.defer","id":"method-constructor","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-utils.defer","classIcon":"icon-singleton","superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/defer.html#utils-defer' target='_blank'>defer.js</a></div></pre><div class='doc-contents'><p><code>when.defer</code> patched with jQuery/deferred compatibility.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='utils.defer'>utils.defer</span><br/><a href='source/defer.html#utils-defer-method-constructor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/utils.defer-method-constructor' class='name expandable'>utils.defer</a>( <span class='pre'></span> ) : <a href=\"#!/api/Deferred\" rel=\"Deferred\" class=\"docClass\">Deferred</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a wrapped when.defer object, which can be send to anything that expects a jQuery/deferred. ...</div><div class='long'><p>Creates a wrapped when.defer object, which can be send to anything that expects a jQuery/deferred.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Deferred\" rel=\"Deferred\" class=\"docClass\">Deferred</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"singleton":true}});