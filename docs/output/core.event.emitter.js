Ext.data.JsonP.core_event_emitter({"tagname":"class","name":"core.event.emitter","autodetected":{},"files":[{"filename":"emitter.js","href":"emitter.html#core-event-emitter"}],"extends":"core.mixin.base","members":[{"name":"displayName","tagname":"property","owner":"core.mixin.base","id":"property-displayName","meta":{"private":true,"readonly":true}},{"name":"handlers","tagname":"property","owner":"core.event.emitter","id":"property-handlers","meta":{"protected":true,"readonly":true}},{"name":"instanceCount","tagname":"property","owner":"core.mixin.base","id":"property-instanceCount","meta":{"private":true,"readonly":true}},{"name":"constructor","tagname":"method","owner":"core.event.emitter","id":"method-constructor","meta":{}},{"name":"emit","tagname":"method","owner":"core.event.emitter","id":"method-emit","meta":{}},{"name":"off","tagname":"method","owner":"core.event.emitter","id":"method-off","meta":{"chainable":true}},{"name":"on","tagname":"method","owner":"core.event.emitter","id":"method-on","meta":{"chainable":true}},{"name":"toString","tagname":"method","owner":"core.mixin.base","id":"method-toString","meta":{"protected":true}},{"name":"create","tagname":"method","owner":"composer.mixin","id":"static-method-create","meta":{"static":true}},{"name":"extend","tagname":"method","owner":"composer.mixin","id":"static-method-extend","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"class-core.event.emitter","short_doc":"This event module is heart of all TroopJS event-based whistles, from the API names it's aligned with Node's events mo...","classIcon":"icon-class","superclasses":["composer.mixin","core.mixin.base"],"subclasses":["core.component.base","core.pubsub.hub"],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/composer.mixin' rel='composer.mixin' class='docClass'>composer.mixin</a><div class='subclass '><a href='#!/api/core.mixin.base' rel='core.mixin.base' class='docClass'>core.mixin.base</a><div class='subclass '><strong>core.event.emitter</strong></div></div></div><h4>Subclasses</h4><div class='dependency'><a href='#!/api/core.component.base' rel='core.component.base' class='docClass'>core.component.base</a></div><div class='dependency'><a href='#!/api/core.pubsub.hub' rel='core.pubsub.hub' class='docClass'>core.pubsub.hub</a></div><h4>Files</h4><div class='dependency'><a href='source/emitter.html#core-event-emitter' target='_blank'>emitter.js</a></div></pre><div class='doc-contents'><p>This event module is heart of all TroopJS event-based whistles, from the API names it's aligned with Node's events module,\nwhile behind the regularity it's powered by a highly customizable <strong>event runner</strong> mechanism, which makes it supports for both:</p>\n\n<ul>\n<li><strong>synchronous event</strong>: all your event handlers are run in a single loop.</li>\n<li><strong>async event with promise</strong>: you can return a promise where the next handler will be called upon the\ncompletion of that promise.</li>\n</ul>\n\n\n<p>Event runner can even determinate the <strong>parameters passing</strong> strategy among handlers, which forms in two flavours:</p>\n\n<ul>\n<li>sequence: where each handler receives the arguments passed to <a href=\"#!/api/core.event.emitter-method-emit\" rel=\"core.event.emitter-method-emit\" class=\"docClass\">emit</a>.</li>\n<li>pipeline: where a handler receives the return value of the previous one.</li>\n</ul>\n\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-displayName' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/core.mixin.base' rel='core.mixin.base' class='defined-in docClass'>core.mixin.base</a><br/><a href='source/base2.html#core-mixin-base-property-displayName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.mixin.base-property-displayName' class='name expandable'>displayName</a> : String<span class=\"signature\"><span class='private' >private</span><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>The hierarchical namespace for this component that indicates it's functionality. ...</div><div class='long'><p>The hierarchical namespace for this component that indicates it's functionality.</p>\n<p>Defaults to: <code>&quot;core/mixin/base&quot;</code></p></div></div></div><div id='property-handlers' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='core.event.emitter'>core.event.emitter</span><br/><a href='source/emitter.html#core-event-emitter-property-handlers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.event.emitter-property-handlers' class='name expandable'>handlers</a> : Array<span class=\"signature\"><span class='protected' >protected</span><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'><p>Handlers attached to this component, addressable either by key or index</p>\n</div><div class='long'><p>Handlers attached to this component, addressable either by key or index</p>\n</div></div></div><div id='property-instanceCount' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/core.mixin.base' rel='core.mixin.base' class='defined-in docClass'>core.mixin.base</a><br/><a href='source/base2.html#core-mixin-base-property-instanceCount' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.mixin.base-property-instanceCount' class='name expandable'>instanceCount</a> : Number<span class=\"signature\"><span class='private' >private</span><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'><p>Instance counter</p>\n</div><div class='long'><p>Instance counter</p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='core.event.emitter'>core.event.emitter</span><br/><a href='source/emitter.html#core-event-emitter-method-constructor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.event.emitter-method-constructor' class='name expandable'>core.event.emitter</a>( <span class='pre'></span> ) : <a href=\"#!/api/core.event.emitter\" rel=\"core.event.emitter\" class=\"docClass\">core.event.emitter</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a new component instance ...</div><div class='long'><p>Creates a new component instance</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/core.event.emitter\" rel=\"core.event.emitter\" class=\"docClass\">core.event.emitter</a></span><div class='sub-desc'>\n</div></li></ul><p>Overrides: <a href=\"#!/api/core.mixin.base-method-constructor\" rel=\"core.mixin.base-method-constructor\" class=\"docClass\">core.mixin.base.constructor</a></p></div></div></div><div id='method-emit' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='core.event.emitter'>core.event.emitter</span><br/><a href='source/emitter.html#core-event-emitter-method-emit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.event.emitter-method-emit' class='name expandable'>emit</a>( <span class='pre'>event, [args]</span> ) : *<span class=\"signature\"></span></div><div class='description'><div class='short'>Trigger an event which notifies each of the listeners of their subscribing,\noptionally pass data values to the listen...</div><div class='long'><p>Trigger an event which notifies each of the listeners of their subscribing,\noptionally pass data values to the listeners.</p>\n\n<p> A sequential runner, is the default runner for this module, in which all handlers are running\n with the same argument data specified by the <a href=\"#!/api/core.event.emitter-method-emit\" rel=\"core.event.emitter-method-emit\" class=\"docClass\">emit</a> function.\n Each handler will wait for the completion for the previous one if it returns a promise.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>event</span> : String|Object<div class='sub-desc'><p>The event type to emit, or an event object</p>\n<ul><li><span class='pre'>type</span> : String (optional)<div class='sub-desc'><p>The event type name.</p>\n</div></li><li><span class='pre'>runner</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>The runner function that determinate how the handlers are executed, overrides the\ndefault behaviour of the event emitting.</p>\n</div></li></ul></div></li><li><span class='pre'>args</span> : ...* (optional)<div class='sub-desc'><p>Data params that are passed to the listener function.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>*</span><div class='sub-desc'><p>Result returned from runner.</p>\n</div></li></ul></div></div></div><div id='method-off' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='core.event.emitter'>core.event.emitter</span><br/><a href='source/emitter.html#core-event-emitter-method-off' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.event.emitter-method-off' class='name expandable'>off</a>( <span class='pre'>type, [context], [callback]</span> ) : <a href=\"#!/api/core.event.emitter\" rel=\"core.event.emitter\" class=\"docClass\">core.event.emitter</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Remove callback(s) from a subscribed event type, if no callback is specified,\nremove all callbacks of this type. ...</div><div class='long'><p>Remove callback(s) from a subscribed event type, if no callback is specified,\nremove all callbacks of this type.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The event type subscribed to</p>\n</div></li><li><span class='pre'>context</span> : Object (optional)<div class='sub-desc'><p>The context to scope the callback to remove</p>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a> (optional)<div class='sub-desc'><p>The event listener function to remove</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/core.event.emitter\" rel=\"core.event.emitter\" class=\"docClass\">core.event.emitter</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-on' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='core.event.emitter'>core.event.emitter</span><br/><a href='source/emitter.html#core-event-emitter-method-on' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.event.emitter-method-on' class='name expandable'>on</a>( <span class='pre'>type, context, callback, [data]</span> ) : <a href=\"#!/api/core.event.emitter\" rel=\"core.event.emitter\" class=\"docClass\">core.event.emitter</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Adds a listener for the specified event type. ...</div><div class='long'><p>Adds a listener for the specified event type.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String<div class='sub-desc'><p>The event type to subscribe to.</p>\n</div></li><li><span class='pre'>context</span> : Object<div class='sub-desc'><p>The context to scope the callback to.</p>\n</div></li><li><span class='pre'>callback</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The event listener function.</p>\n</div></li><li><span class='pre'>data</span> : * (optional)<div class='sub-desc'><p>Handler data</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/core.event.emitter\" rel=\"core.event.emitter\" class=\"docClass\">core.event.emitter</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-toString' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/core.mixin.base' rel='core.mixin.base' class='defined-in docClass'>core.mixin.base</a><br/><a href='source/base2.html#core-mixin-base-method-toString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/core.mixin.base-method-toString' class='name expandable'>toString</a>( <span class='pre'></span> ) : String<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Gives string representation of this component instance. ...</div><div class='long'><p>Gives string representation of this component instance.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p><a href=\"#!/api/core.mixin.base-property-displayName\" rel=\"core.mixin.base-property-displayName\" class=\"docClass\">displayName</a><code>@</code><a href=\"#!/api/core.mixin.base-property-instanceCount\" rel=\"core.mixin.base-property-instanceCount\" class=\"docClass\">instanceCount</a></p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-create' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/composer.mixin' rel='composer.mixin' class='defined-in docClass'>composer.mixin</a><br/><a href='source/mixin.html#composer-mixin-static-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/composer.mixin-static-method-create' class='name expandable'>create</a>( <span class='pre'>mixin</span> ) : <a href=\"#!/api/composer.mixin\" rel=\"composer.mixin\" class=\"docClass\">composer.mixin</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Instantiate immediately after extending this constructor from multiple others constructors/objects. ...</div><div class='long'><p>Instantiate immediately after extending this constructor from multiple others constructors/objects.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mixin</span> : ...(<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>|Object)<div class='sub-desc'><p>One or more constructors or objects to be mixed in.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/composer.mixin\" rel=\"composer.mixin\" class=\"docClass\">composer.mixin</a></span><div class='sub-desc'><p>Object instance created out of the mixin of constructors and objects.</p>\n</div></li></ul></div></div></div><div id='static-method-extend' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/composer.mixin' rel='composer.mixin' class='defined-in docClass'>composer.mixin</a><br/><a href='source/mixin.html#composer-mixin-static-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/composer.mixin-static-method-extend' class='name expandable'>extend</a>( <span class='pre'>mixin</span> ) : <a href=\"#!/api/composer.mixin\" rel=\"composer.mixin\" class=\"docClass\">composer.mixin</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Extend this constructor from multiple others constructors/objects. ...</div><div class='long'><p>Extend this constructor from multiple others constructors/objects.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>mixin</span> : ...(<a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a>|Object)<div class='sub-desc'><p>One or more constructors or objects to be mixed in.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/composer.mixin\" rel=\"composer.mixin\" class=\"docClass\">composer.mixin</a></span><div class='sub-desc'><p>The extended subclass.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});