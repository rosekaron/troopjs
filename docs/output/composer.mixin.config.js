Ext.data.JsonP.composer_mixin_config({"tagname":"class","name":"composer.mixin.config","autodetected":{},"files":[{"filename":"config.js","href":"config3.html#composer-mixin-config"}],"extends":"requirejs.config","inheritdoc":null,"localdoc":"<p>This module is to provide configuration for the <a href=\"#!/api/composer.mixin.factory\" rel=\"composer.mixin.factory\" class=\"docClass\">composer.mixin.factory</a>.</p>\n","protected":true,"static":true,"members":[{"name":"pattern","tagname":"cfg","owner":"composer.mixin.config","id":"cfg-pattern","meta":{}},{"name":"pragmas","tagname":"cfg","owner":"composer.mixin.config","id":"cfg-pragmas","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"static-class-composer.mixin.config","short_doc":"RequireJS config interface\nTo change the configuration, refer to RequireJS module config API:\n\nrequirejs.config(\n{\n  ...","classIcon":"icon-class","superclasses":["requirejs.config"],"subclasses":[],"mixedInto":["composer.mixin.factory"],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/requirejs.config' rel='requirejs.config' class='docClass'>requirejs.config</a><div class='subclass '><strong>composer.mixin.config</strong></div></div><h4>Mixed into</h4><div class='dependency'><a href='#!/api/composer.mixin.factory' rel='composer.mixin.factory' class='docClass'>composer.mixin.factory</a></div><h4>Files</h4><div class='dependency'><a href='source/config3.html#composer-mixin-config' target='_blank'>config.js</a></div></pre><div class='doc-contents'><p>RequireJS config interface\nTo change the configuration, refer to RequireJS <a href=\"http://requirejs.org/docs/api.html#config-moduleconfig\">module config API</a>:</p>\n\n<pre><code><a href=\"#!/api/requirejs.config\" rel=\"requirejs.config\" class=\"docClass\">requirejs.config</a>(\n{\n    config: { \"component.name\" : { \"configOption\" : \"configValue\", ...  } }\n})\n</code></pre>\n<p>This module is to provide configuration for the <a href=\"#!/api/composer.mixin.factory\" rel=\"composer.mixin.factory\" class=\"docClass\">composer.mixin.factory</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-pattern' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='composer.mixin.config'>composer.mixin.config</span><br/><a href='source/config3.html#composer-mixin-config-cfg-pattern' target='_blank' class='view-source'>view source</a></div><a href='#!/api/composer.mixin.config-cfg-pattern' class='name expandable'>pattern</a> : RegExp<span class=\"signature\"></span></div><div class='description'><div class='short'>RegExp used to determine if a method is a special ...</div><div class='long'><p>RegExp used to determine if a method is a special</p>\n<p>Defaults to: <code>/^(\\w+)(?::(.+?))?\\/(.+)/</code></p></div></div></div><div id='cfg-pragmas' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='composer.mixin.config'>composer.mixin.config</span><br/><a href='source/config3.html#composer-mixin-config-cfg-pragmas' target='_blank' class='view-source'>view source</a></div><a href='#!/api/composer.mixin.config-cfg-pragmas' class='name expandable'>pragmas</a> : Object[]<span class=\"signature\"></span></div><div class='description'><div class='short'>Pragmas used to rewrite methods before processing ...</div><div class='long'><p>Pragmas used to rewrite methods before processing</p>\n<p>Defaults to: <code>[]</code></p><ul><li><span class='pre'>pattern</span> : RegExp<div class='sub-desc'><p>Matching pattern</p>\n</div></li><li><span class='pre'>replace</span> : String<div class='sub-desc'><p>Replacement string</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"protected":true,"static":true}});