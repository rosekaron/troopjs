Ext.data.JsonP.composer_decorator_around({"tagname":"class","name":"composer.decorator.around","autodetected":{},"files":[{"filename":"around.js","href":"around.html#composer-decorator-around"}],"extends":"composer.decorator","static":true,"members":[{"name":"constructor","tagname":"method","owner":"composer.decorator.around","id":"static-method-constructor","meta":{"static":true}},{"name":"apply","tagname":"method","owner":"Function","id":"static-method-apply","meta":{"static":true}},{"name":"call","tagname":"method","owner":"Function","id":"static-method-call","meta":{"static":true}}],"alternateClassNames":[],"aliases":{},"id":"static-class-composer.decorator.around","classIcon":"icon-class","superclasses":["Function","composer.decorator"],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Function' rel='Function' class='docClass'>Function</a><div class='subclass '><a href='#!/api/composer.decorator' rel='composer.decorator' class='docClass'>composer.decorator</a><div class='subclass '><strong>composer.decorator.around</strong></div></div></div><h4>Files</h4><div class='dependency'><a href='source/around.html#composer-decorator-around' target='_blank'>around.js</a></div></pre><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='composer.decorator.around'>composer.decorator.around</span><br/><a href='source/around.html#composer-decorator-around-static-method-constructor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/composer.decorator.around-static-method-constructor' class='name expandable'>composer.decorator.around</a>( <span class='pre'>func</span> ) : <a href=\"#!/api/composer.mixin.decorator\" rel=\"composer.mixin.decorator\" class=\"docClass\">composer.mixin.decorator</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Create a decorator that is to override an existing method. ...</div><div class='long'><p>Create a decorator that is to override an existing method.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>func</span> : <a href=\"#!/api/Function\" rel=\"Function\" class=\"docClass\">Function</a><div class='sub-desc'><p>The decorator function which receives the original function as parameter and is supposed to\nreturn a function that is to replace the original.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/composer.mixin.decorator\" rel=\"composer.mixin.decorator\" class=\"docClass\">composer.mixin.decorator</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-apply' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Function' rel='Function' class='defined-in docClass'>Function</a><br/><a href='source/Function.html#Function-static-method-apply' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Function-static-method-apply' class='name expandable'>apply</a>( <span class='pre'>thisArg, [argsArray]</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Applies the method of another object in the context of a different object (the calling object); arguments can be pass...</div><div class='long'><p>Applies the method of another object in the context of a different object (the calling object); arguments can be passed as an Array object.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>thisArg</span> : Object<div class='sub-desc'><p>The value of this provided for the call to fun. Note that this may not be the actual value seen by the method: if the method is a function in non-strict mode code, <code>null</code> and <code>undefined</code> will be replaced with the global object, and primitive values will be boxed.</p>\n</div></li><li><span class='pre'>argsArray</span> : Array (optional)<div class='sub-desc'><p>An array-like object, specifying the arguments with which fun should be called, or <code>null</code> or <code>undefined</code> if no arguments should be provided to the function. Starting with ECMAScript 5 these arguments can be a generic array-like object instead of an array.</p>\n</div></li></ul></div></div></div><div id='static-method-call' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Function' rel='Function' class='defined-in docClass'>Function</a><br/><a href='source/Function.html#Function-static-method-call' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Function-static-method-call' class='name expandable'>call</a>( <span class='pre'>thisArg, [arg]</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Calls (executes) a method of another object in the context of a different object (the calling object); arguments can ...</div><div class='long'><p>Calls (executes) a method of another object in the context of a different object (the calling object); arguments can be passed as they are.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>thisArg</span> : Object<div class='sub-desc'><p>The value of this provided for the call to fun. Note that this may not be the actual value seen by the method: if the method is a function in non-strict mode code, <code>null</code> and <code>undefined</code> will be replaced with the global object, and primitive values will be boxed.</p>\n</div></li><li><span class='pre'>arg</span> : ...* (optional)<div class='sub-desc'><p>Arguments for the object.</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{"static":true}});